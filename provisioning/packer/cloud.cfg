#cloud-config

# The top level settings are used as module
# and system configuration.

# Update the contents of /etc/hosts. This will use the name you
# specified when creating the VM in proxmox
manage_etc_hosts: true

# A set of users which may be applied and/or used by various modules
# when a 'default' entry is found it will reference the 'default_user'
# from the distro configuration specified below

users:
  - default
  - name: admin
    lock_passwd: false
    gecos: Debian
    groups: [adm, audio, cdrom, dialout, dip, floppy, netdev, plugdev, sudo, video, docker]
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    shell: /bin/bash
#    ssh_authorized_keys:
#      - ssh-rsa ... # Add your SSH public key here

# If this is set, 'root' will not be able to ssh in and they 
# will get a message to login instead as the above $user (debian)
disable_root: true

# Change default root password from the preseed file to a random one
chpasswd:
  root:RANDOM

# Update apt database on first boot (run 'apt-get update')
apt_update: true

# Upgrade the instance on first boot
apt_upgrade: true

# Reboot after package install/update if necessary
apt_reboot_if_required: true

# Install needed packages
packages:
  - vim
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  - net-tools

# Write out new SSH daemon configuration. Standard debian 11 configuration
# apart from forbidding root login and disabling password authentication
write_files:
  - path: /etc/sysctl.d/enabled_ipv4_forwarding.conf
    content: |
      net.ipv4.conf.all.forwarding=1
  - path: /etc/ssh/sshd_config
    content: |
      PermitRootLogin no
      PubkeyAuthentication yes
      PasswordAuthentication no
      PermitEmptyPasswords no
      ChallengeResponseAuthentication no
      UsePAM yes
      X11Forwarding yes
      PrintMotd no
      AcceptEnv LANG LC_*
      Subsystem	sftp	/usr/lib/openssh/sftp-server
  - path: /srv/portrainer/docker-compose.yml
    content: |
      services:
        portainer:
          image: portainer/portainer-ce
          container_name: portainer
          restart: unless-stopped
          labels:
            - "com.centurylinklabs.watchtower.enable"
          ports:
            - "8000:8000"
            - "9000:9000"
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer_data:/data
      volumes:
        portainer_data:
  - path: /srv/watchtower/docker-compose.yml
    content: |
      services:
        watchtower:
          image: containrrr/watchtower
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /etc/localtime:/etc/localtime:ro
          environment: 
            - WATCHTOWER_CLEANUP=true
            - WATCHTOWER_REMOVE_VOLUMES=true
            - WATCHTOWER_LABEL_ENABLE=true
            - WATCHTOWER_SCHEDULE="0 0 0 * * *"

groups:
  - docker

runcmd:
  - curl -fsSL https://get.docker.com | sh
  - systemctl start docker
  - systemctl enable docker
  - adduser admin docker

# The modules that run in the 'init' stage
cloud_init_modules:
  - seed_random
  - write-files
  - set_hostname
  - update_hostname
  - update_etc_hosts
  - ca-certs
  - users-groups
  - ssh

# The modules that run in the 'config' stage
cloud_config_modules:
  - set-passwords
  - ntp
  - timezone
  # - disable-ec2-metadata
  - apt-pipelining
  - apt-configure
  - runcmd

# The modules that run in the 'final' stage
cloud_final_modules:
  - package-update-upgrade-install
  - scripts-vendor
  - scripts-per-once
  - scripts-per-boot
  - scripts-per-instance
  - scripts-user
  - ssh-authkey-fingerprints
  - final-message

# System and/or distro specific settings
# (not accessible to handlers/transforms)
system_info:
  distro: debian
  default_user:
    name: admin
  paths:
    cloud_dir: /var/lib/cloud/
    templates_dir: /etc/cloud/templates/
    upstart_dir: /etc/init/
  package_mirrors:
    - arches: [default]
      failsafe:
        primary: http://deb.debian.org/debian
        security: http://security.debian.org/
  ssh_svcname: ssh
