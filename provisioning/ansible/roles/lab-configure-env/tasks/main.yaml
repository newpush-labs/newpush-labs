- name: Get lab external ip
  ansible.builtin.command: "curl -s -4 https://ifconfig.me"
  register: cmd_get_lab_external_ip
  changed_when: false
  failed_when: false
  when: lab_external_ip is not defined or lab_external_ip == ""

- name: Extract lab external ip
  ansible.builtin.set_fact:
    lab_external_ip: "{{ cmd_get_lab_external_ip.stdout }}"
  when: lab_external_ip is not defined or lab_external_ip == ""

- name: Set domain
  ansible.builtin.set_fact:
    lab_domain: "{{ lab_external_ip }}.traefik.me"
  when: lab_domain is not defined or lab_domain == ""

- name: Set coder access url
  ansible.builtin.set_fact:
    coder_access_url: "https://coder.{{ lab_external_ip }}.traefik.me"

- name: Add DOMAIN variable to .env file if it doesn't exist
  ansible.builtin.lineinfile:
    path: "{{ lab_dir }}/services/.env"
    line: "DOMAIN={{ lab_domain }}"
    create: true
    regexp: '^DOMAIN='
    mode: "0644"

- name: Add LAB_IP variable to .env file if it doesn't exist
  ansible.builtin.lineinfile:
    path: "{{ lab_dir }}/services/.env"
    line: "LAB_IP={{ lab_external_ip }}"
    create: true
    regexp: '^LAB_IP='
    mode: "0644"
- name: Add CODER_ACCESS_URL variable to .env file if it doesn't exist
  ansible.builtin.lineinfile:
    path: "{{ lab_dir }}/services/.env"
    line: "CODER_ACCESS_URL={{ coder_access_url }}"
    create: true
    regexp: '^CODER_ACCESS_URL='
    mode: "0644"



- name: Get client secret from casdoor
  ansible.builtin.command: python3 {{ lab_dir }}/utils/casdoor/casdoor-rotate-secrets.py --db {{ lab_dir }}/services/casdoor/casdoor.db
  register: cmd_casdoor_rotate_secrets
  changed_when: false
  failed_when: false

- name: Extract Client Secret
  ansible.builtin.set_fact:
    generic_oauth_client_secret: "{{ cmd_casdoor_rotate_secrets.stdout_lines \
                                          | select('search', 'Client Secret: ') \
                                          | map('regex_replace', '^.*Client Secret: ', '') \
                                          | first }}"

- name: Add LAB_OAUTH_CLIENT_ID if it doesn't exist
  ansible.builtin.lineinfile:
    path: "{{ lab_dir }}/services/.env"
    line: "LAB_OAUTH_CLIENT_ID={{ generic_oauth_client_id }}"
    create: true
    regexp: '^LAB_OAUTH_CLIENT_ID='
    mode: "0644"

- name: Add LAB_OAUTH_CLIENT_SECRET if it doesn't exist
  ansible.builtin.lineinfile:
    path: "{{ lab_dir }}/services/.env"
    line: "LAB_OAUTH_CLIENT_SECRET={{ generic_oauth_client_secret }}"
    create: true
    regexp: '^LAB_OAUTH_CLIENT_SECRET='
    mode: "0644"

- name: Add OPENAI_API_KEY and enable OpenAI if it doesn't exist and is set
  ansible.builtin.lineinfile:
    path: "{{ lab_dir }}/services/.env"
    line: "{{ item.line }}"
    create: true
    regexp: "{{ item.regexp }}"
    mode: "0644"
  loop:
    - { line: "OPENAI_API_KEY={{ openai_api_key }}", regexp: '^OPENAI_API_KEY=' }
    - { line: "OPENAI_ENABLED=1", regexp: '^OPENAI_ENABLED=' }
  when: openai_api_key is defined and openai_api_key is not none and openai_api_key | string | length > 0

- name: Add ANTHROPIC_API_KEY and enable Anthropic if it doesn't exist and is set
  ansible.builtin.lineinfile:
    path: "{{ lab_dir }}/services/.env"
    line: "{{ item.line }}"
    create: true
    regexp: "{{ item.regexp }}"
    mode: "0644"
  loop:
    - { line: "ANTHROPIC_API_KEY={{ anthropic_api_key }}", regexp: '^ANTHROPIC_API_KEY=' }
    - { line: "ANTHROPIC_ENABLED=1", regexp: '^ANTHROPIC_ENABLED=' }
  when: anthropic_api_key is defined and anthropic_api_key is not none and anthropic_api_key | string | length > 0
