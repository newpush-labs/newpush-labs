# pre_tasks:

- name: Ensure mafl config directory exists
  ansible.builtin.file:
    path: "{{ lab_dir }}/services/mafl/"
    state: directory
    mode: '0755'
    owner: 1000
    group: 50
- name: Check if mafl config.yml exists
  ansible.builtin.stat:
    path: "{{ lab_dir }}/services/mafl/config.yml"
  register: mafl_config_stat
  
- name: Copy mafl config.yml if not yet present
  ansible.builtin.copy:
    src: ../../services/mafl/config.yml_template
    dest: "{{ lab_dir }}/services/mafl/config.yml"
    mode: '0644'
    owner: 1000
    group: 50
  when: not mafl_config_stat.stat.exists

- name: Ensure casdoor.db directory exists
  ansible.builtin.file:
    path: "{{ lab_dir }}/services/casdoor"
    state: directory
    mode: '0755'
    owner: 1000
    group: 50

- name: Check if casdoor.db exists
  ansible.builtin.stat:
    path: "{{ lab_dir }}/services/casdoor/casdoor.db"
  register: casdoor_db_stat

- name: Copy casdoor.db if not yet present
  ansible.builtin.copy:
    src: ../../services/casdoor/casdoor.db_template
    dest: "{{ lab_dir }}/services/casdoor/casdoor.db"
    mode: '0777'
    backup: true
  when: not casdoor_db_stat.stat.exists

- name: Get client secret from casdoor
  ansible.builtin.command: python3 {{ lab_dir }}/utils/casdoor/casdoor-rotate-secrets.py --db {{ lab_dir }}/services/casdoor/casdoor.db
  register: cmd_casdoor_rotate_secrets
  changed_when: false
  failed_when: false

- name: Extract Client Secret
  ansible.builtin.set_fact:
    generic_oauth_client_secret: "{{ cmd_casdoor_rotate_secrets.stdout_lines \
                                          | select('search', 'Client Secret: ') \
                                          | map('regex_replace', '^.*Client Secret: ', '') \
                                          | first }}"

- name: Get lab external ip
  ansible.builtin.command: "curl -s -4 https://ifconfig.me"
  register: cmd_get_lab_external_ip
  changed_when: false
  failed_when: false
  when: lab_external_ip is not defined or lab_external_ip == ""

- name: Extract lab external ip
  ansible.builtin.set_fact:
    lab_external_ip: "{{ cmd_get_lab_external_ip.stdout }}"
  when: lab_external_ip is not defined or lab_external_ip == ""

- name: Get lab user
  ansible.builtin.shell: "getent passwd 1000 | cut -d':' -f1"
  register: cmd_get_lab_user
  changed_when: false
  failed_when: false
  when: lab_user is not defined or lab_user == ""

- name: Set lab domain fact
  ansible.builtin.set_fact:
    lab_domain: "{{ lab_external_ip }}.traefik.me"
  when: lab_domain is not defined or lab_domain == ""

- name: Set lab user fact
  ansible.builtin.set_fact:
    lab_user: "{{ cmd_get_lab_user.stdout }}"
  when: lab_user is not defined or lab_user == ""

- name: Debug lab user
  ansible.builtin.debug:
    msg: "The lab user is {{ lab_user }}"

- name: Get lab ssh fingerprint
  ansible.builtin.shell: |
    set -o pipefail
    ssh-keygen -lf {{ lab_dir }}/services/sshwifty/id_rsa | awk '{print $2}'
  register: cmd_get_lab_ssh_fingerprint
  changed_when: false
  failed_when: false
  when: lab_ssh_fingerprint is not defined or lab_ssh_fingerprint == ""

- name: Set lab ssh fingerprint fact
  ansible.builtin.set_fact:
    lab_ssh_fingerprint: "{{ cmd_get_lab_ssh_fingerprint.stdout }}"
  when: lab_ssh_fingerprint is not defined or lab_ssh_fingerprint == ""

- name: Debug lab external ip
  ansible.builtin.debug:
    msg: "The lab external IP is {{ lab_external_ip }} with user {{ lab_user }} and fingerprint {{ lab_ssh_fingerprint }}"

- name: Synchronize docker-compose files and their corresponding folders
  ansible.posix.synchronize:
    src: "{{ item }}"
    dest: "{{ lab_dir }}/services/"
    rsync_opts:
      - "--include=docker-compose*.yml"
      - "--include=docker-compose*.yaml"
      - "--include=*/"
      - "--exclude=*"
  with_items: 
    - "../../services/"

- name: Synchronize contents of each service folder
  ansible.posix.synchronize:
    src: "../../services/{{ item }}/"
    dest: "{{ lab_dir }}/services/{{ item }}/"
  with_items:
    - "casdoor"
    - "dockge"
    - "grafana"
    - "mafl"
    - "portainer"
    - "prometheus"
    - "sshwifty"
    - "traefik"
    - "crowdsec"
    - "code-server"

- name: Render the Jinja2 template for Traefik
  ansible.builtin.template:
    src: ../../services/traefik/traefik.yml.j2
    dest: "{{ lab_dir }}/services/traefik/traefik.yml"
    mode: '0644'

- name: Render the Jinja2 template for Crowdsec
  ansible.builtin.template:
    src: ../../services/traefik/conf.d/crowdsec.yml.j2
    dest: "{{ lab_dir }}/services/traefik/conf.d/crowdsec.yml"
    mode: '0644'


- name: Render the Jinja2 template for Perplexica
  ansible.builtin.template:
    src: ../../services/dockge/stacks/lab-llm-perplexica/perplexica/config.toml.j2
    dest: "{{ lab_dir }}/services/dockge/stacks/lab-llm-perplexica/perplexica/config.toml"
    mode: '0644'

- name: Render the Jinja2 template for Grafana
  ansible.builtin.template:
    src: ../../services/docker-compose.grafana.yaml.j2
    dest: "{{ lab_dir }}/services/docker-compose.grafana.yaml"
    mode: '0644'

- name: Render the Jinja2 template for Casdoor
  ansible.builtin.template:
    src: ../../services/docker-compose.casdoor.yaml.j2
    dest: "{{ lab_dir }}/services/docker-compose.casdoor.yaml"
    mode: '0644'

- name: Render the Jinja2 template for Dockge
  ansible.builtin.template:
    src: ../../services/docker-compose.dockge.yaml.j2
    dest: "{{ lab_dir }}/services/docker-compose.dockge.yaml"
    mode: '0644'

- name: Render the Jinja2 template for Sshwifty
  ansible.builtin.template:
    src: ../../services/sshwifty/sshwifty.conf.json.j2
    dest: "{{ lab_dir }}/services/sshwifty/sshwifty.conf.json"
    mode: '0644'

- name: Render the Jinja2 template for Portainer
  ansible.builtin.template:
    src: ../../services/docker-compose.portainer.yaml.j2
    dest: "{{ lab_dir }}/services/docker-compose.portainer.yaml"
    mode: '0644'

- name: Render the Jinja2 template for lab-llm-lobechat
  ansible.builtin.template:
    src: ../../services/dockge/stacks/lab-llm-lobechat/compose.yml.j2
    dest: "{{ lab_dir }}/services/dockge/stacks/lab-llm-lobechat/compose.yml"
    mode: '0644'

- name: Render the Jinja2 template for lab-llm-skyvern
  ansible.builtin.template:
    src: ../../services/dockge/stacks/lab-llm-skyvern/compose.yaml.j2
    dest: "{{ lab_dir }}/services/dockge/stacks/lab-llm-skyvern/compose.yaml"
    mode: '0644'

- name: Render the Jinja2 template for code-server
  ansible.builtin.template:
    src: ../../services/docker-compose.code-server.yaml.j2
    dest: "{{ lab_dir }}/services/docker-compose.code-server.yaml"
    mode: '0644'

- name: Cleanup the Jinja2 templates
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ lab_dir }}/services/traefik/traefik.yml.j2"
    - "{{ lab_dir }}/services/dockge/stacks/lab-llm-perplexica/perplexica/config.toml.j2"
    - "{{ lab_dir }}/services/docker-compose.grafana.yaml.j2"
    - "{{ lab_dir }}/services/docker-compose.casdoor.yaml.j2"
    - "{{ lab_dir }}/services/docker-compose.dockge.yaml.j2"
    - "{{ lab_dir }}/services/docker-compose.code-server.yaml.j2"
    - "{{ lab_dir }}/services/sshwifty/sshwifty.conf.json.j2"
    - "{{ lab_dir }}/services/docker-compose.portainer.yaml.j2"
    - "{{ lab_dir }}/services/dockge/stacks/lab-llm-lobechat/compose.yml.j2"
    - "{{ lab_dir }}/services/traefik/conf.d/crowdsec.yml.j2"
    - "{{ lab_dir }}/services/dockge/stacks/lab-llm-skyvern/compose.yaml.j2"

  